@using System.Collections.Generic
@using JabbR.ContentProviders.Core
@using SquishIt.Framework;
@using JabbR
@using JabbR.Services
@{
    var applicationSettings = Model.ApplicationSettings as ApplicationSettings;
    var allContentProviders = Model.AllContentProviders as IList<IContentProvider>;
}
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="UTF-8" />
    <title>@LanguageResources.SiteName | Administration</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    @{ 
        WriteLiteral(Bundle.Css()
            .Add("~/Content/bootstrap.min.css")
            .Add("~/Content/bootstrap-responsive.min.css")
            .Add("~/Content/font-awesome.min.css")
            .Add("~/Content/themes/default/Chat.css")
            .Add("~/Content/emoji20.css")
            .Render("~/Content/collara_#.css"));
    }
</head>
<body class="administration">
    <section id="page" role="application">
        <header id="heading" role="heading">
            <div class="banner" role="banner">
                <h1>JabbR</h1>
            </div>
        </header>
        <div class="container">
            <div class="row" style="padding-top: 75px;">
                @Html.AlertMessages()
                <div class="row">
                    <div class="span12">
                        <span class="administration-title pull-left">@LanguageResources.Administration</span>
                    </div>
                </div>
                <hr />
            </div>
            <form class="form-horizontal" action="@Url.Content("~/administration")" method="POST">
                @Html.ValidationSummary()
                <fieldset id="generalSettings">
                    <legend>@LanguageResources.Administration_GeneralSettings</legend>
                    <div class="control-group">
                        <label class="control-label" for="allowUserRegistration">@LanguageResources.Administration_AllowUserRegistration</label>
                        <div class="controls">
                            @Html.CheckBox("allowUserRegistration", applicationSettings.AllowUserRegistration)
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="allowUserResetPassword">@LanguageResources.Administration_ResetPasswordAllowed</label>
                        <div class="controls">
                            @Html.CheckBox("allowUserResetPassword", applicationSettings.AllowUserResetPassword)
                        </div>
                    </div>                    
                    <div class="control-group">
                        <label class="control-label" for="requestResetPasswordValidThroughInHours">@LanguageResources.Administration_ResetPasswordValidDurationHours</label>
                        <div class="controls">
                            <input type="text" id="requestResetPasswordValidThroughInHours" name="requestResetPasswordValidThroughInHours" class="input-mini" value="@applicationSettings.RequestResetPasswordValidThroughInHours" />
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="allowRoomCreation">@LanguageResources.Administration_AllowRoomCreation</label>
                        <div class="controls">
                            @Html.CheckBox("allowRoomCreation", applicationSettings.AllowRoomCreation)
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="maxMessageLength">@LanguageResources.Administration_MaxMessageLength</label>
                        <div class="controls">
                            <input type="text" id="maxMessageLength" name="maxMessageLength" class="input-xlarge" value="@applicationSettings.MaxMessageLength" placeholder="@LanguageResources.Administration_MaxMessageLength"/>
                            <span class="help-block">@LanguageResources.Administration_MaxMessageLengthHelp</span>
                        </div>
                    </div>
                </fieldset>
                <fieldset id="emailSettings">
                    <legend>@LanguageResources.Administration_EmailSettings</legend>
                    <div class="control-group">
                        <label class="control-label" for="emailSender">@LanguageResources.Administration_EmailSender</label>
                        <div class="controls">
                            @Html.TextBox("emailSender", "input-xlarge", "noreply@mysite.com")
                        </div>
                    </div>
                </fieldset>
                <fieldset id="encryption">
                    <legend>@LanguageResources.Administration_Encryption</legend>
                    <div class="control-group">
                        <label class="control-label" for="encryptionKey">@LanguageResources.Administration_EncryptionKey</label>
                        <div class="controls">
                            <input type="hidden" id="encryptionKey" name="encryptionKey" value="@applicationSettings.EncryptionKey"/>
                            <label class="help-block label-align-left word-breakable literal-control">@applicationSettings.EncryptionKey</label>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="verificationKey">@LanguageResources.Administration_VerificationKey</label>
                        <div class="controls">
                            <input type="hidden" id="verificationKey" name="verificationKey" value="@applicationSettings.VerificationKey"/>
                            <label class="help-block label-align-left word-breakable literal-control">@applicationSettings.VerificationKey</label>
                        </div>
                    </div>
                </fieldset>
                <fieldset id="analytics">
                    <legend>@LanguageResources.Administration_Analytics</legend>
                    <div class="control-group">
                        <label class="control-label" for="googleAnalytics">@LanguageResources.Administration_AnalyticsGoogleId</label>
                        <div class="controls">
                            <input type="text" id="googleAnalytics" name="googleAnalytics" class="input-xlarge" value="@applicationSettings.GoogleAnalytics" placeholder="@LanguageResources.Administration_AnalyticsGoogleId"/>
                        </div>
                    </div>
                </fieldset>
                <fieldset id="identityProviders">
                    <legend>@LanguageResources.Administration_IdentityProviders</legend>
                    <div class="control-group">                        
                        <label for="facebookKey" class="control-label">Facebook</label>
                        <div class="controls">
                            <input type="text" id="facebookAppId" name="facebookAppId" class="input-xlarge" value="@applicationSettings.FacebookAppId" placeholder="Facebook app ID" title="Facebook app ID" />
                            <input type="text" id="facebookAppSecret" name="facebookAppSecret" class="input-xlarge" value="@applicationSettings.FacebookAppSecret" placeholder="Facebook app secret" title="Facebook app secret" />
                        </div>
                    </div>
                    <div class="control-group">
                        <label for="twitterKey" class="control-label">Twitter</label>
                        <div class="controls">
                            <input type="text" id="twitterConsumerKey" name="twitterConsumerKey" class="input-xlarge" value="@applicationSettings.TwitterConsumerKey" placeholder="Twitter consumer key" title="Twitter consumer key" />
                            <input type="text" id="twitterConsumerSecret" name="twitterConsumerSecret" class="input-xlarge" value="@applicationSettings.TwitterConsumerSecret" placeholder="Twitter consumer secret" title="Twitter consumer secret" />
                        </div>
                    </div>
                    <div class="control-group">
                        <label for="googleKey" class="control-label">Google</label>
                        <div class="controls">
                            <input type="text" id="googleClientId" name="googleClientId" class="input-xlarge" value="@applicationSettings.GoogleClientID" placeholder="Google client id" title="Google client id" />
                            <input type="text" id="googleClientSecret" name="googleClientSecret" class="input-xlarge" value="@applicationSettings.GoogleClientSecret" placeholder="Google client secret" title="Google client secret" />
                        </div>
                    </div>
                </fieldset>
                <div class="row" style="padding-top: 75px;">
                    <div class="row">
                        <div class="span12">
                            <span class="administration-title pull-left">@LanguageResources.Administration_Storage</span>
                        </div>
                    </div>
                    <hr />
                    <fieldset id="storageGeneral">
                        <div class="control-group">
                            <label class="control-label" for="maxFileUploadBytes">@LanguageResources.Administration_MaxFileUploadBytes</label>
                            <div class="controls">
                                <input type="text" id="maxFileUploadBytes" name="maxFileUploadBytes" class="input-xlarge" value="@applicationSettings.MaxFileUploadBytes" placeholder="@LanguageResources.Administration_MaxFileUploadBytes"/>
                            </div>
                        </div>
                    </fieldset>
                    <div class="control-group">
                        <fieldset id="storageAzure">
                            <legend>@LanguageResources.Administration_Storage_Azure</legend>
                            <div class="control-group">
                                <label class="control-label" for="azureBlobStorageConnectionString">@LanguageResources.Administration_AzureBlobStorageConnectionString</label>
                                <div class="controls">
                                    <input type="text" id="azureBlobStorageConnectionString" name="azureBlobStorageConnectionString" class="input-xlarge" value="@applicationSettings.AzureblobStorageConnectionString" placeholder="@LanguageResources.Administration_AzureBlobStorageConnectionString"/>
                                </div>
                            </div>

                        </fieldset>
                    </div>
                    <div class="control-group">
                        <fieldset id="storageLocal">
                            <legend>@LanguageResources.Administration_Storage_Local</legend>
                            <div class="control-group">
                                <label class="control-label" for="localFileSystemStoragePath">@LanguageResources.Administration_LocalFileSystemStoragePath</label>
                                <div class="controls">
                                    <input type="text" id="localFileSystemStoragePath" name="localFileSystemStoragePath" class="input-xlarge" value="@applicationSettings.LocalFileSystemStoragePath" placeholder="@LanguageResources.Administration_LocalFileSystemStoragePath_PlaceHolder"/>
                                </div>
                            </div>
                            <div class="control-group">
                                <label class="control-label" for="localFileSystemStorageUriPrefix">@LanguageResources.Administration_LocalFileSystemStorageUriPrefix</label>
                                <div class="controls">
                                    <input type="text" id="localFileSystemStorageUriPrefix" name="localFileSystemStorageUriPrefix" class="input-xlarge" value="@applicationSettings.LocalFileSystemStorageUriPrefix" placeholder="@LanguageResources.Administration_LocalFileSystemStorageUriPrefix_PlaceHolder"/>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div class="control-group">
                        <fieldset id="contentProvidersCustom">
                            <legend>@LanguageResources.Administration_ContentProviders_BuiltIn</legend>
                            <div class="control-group contentproviders">
                                <table class="table-striped table-hover table-condensed">
                                    <thead>
                                        <tr>
                                            <th>@LanguageResources.Administration_ContentProviders_Enabled</th>
                                            <th>@LanguageResources.Administration_ContentProviders_Name</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach(var provider in allContentProviders)
                                        {
                                            var fullName = provider.GetType().Name;
                                            var friendlyName = fullName.Replace("ContentProvider", "");
                                            var enabled = !applicationSettings.DisabledContentProviders.Contains(fullName);
                                            <tr style="vertical-align: top">
                                                <td><input type="checkbox" name="EnabledContentProviders" checked="@enabled" value="@fullName"/></td>
                                                <td>
                                                    @Encoder.HtmlEncode(friendlyName)
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </fieldset>
                    </div>

                    <div class="control-group">
                        <fieldset id="contentProvidersCustom">
                            <legend>@LanguageResources.Administration_ContentProviders_Custom</legend>
                            <div class="control-group contentproviders">
                                <table class="table-striped table-hover table-condensed">
                                    <thead>
                                        <tr>
                                            <th>@LanguageResources.Administration_ContentProviders_Enabled</th>
                                            <th>@LanguageResources.Administration_ContentProviders_Collapsible</th>
                                            <th>@LanguageResources.Administration_ContentProviders_Name</th>
                                            <th>@LanguageResources.Administration_ContentProviders_Domains</th>
                                            <th>@LanguageResources.Administration_ContentProviders_Extract</th>
                                            <th>@LanguageResources.Administration_ContentProviders_Output</th>
                                            <th>@LanguageResources.Administration_ContentProviders_Script</th>
                                            <th>@LanguageResources.Administration_ContentProviders_Title</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @* This row shall act as a template for adding new rows *@
                                        <tr class="template" style="display:none">
                                            <td><input type="checkbox" name="enabled[0]" /></td>
                                            <td><input type="checkbox" name="collapsible[0]" /></td>
                                            <td><input type="text" name="name[0]" class="input-mini" value="" /></td>
                                            <td><input type="text" name="domains[0]" class="input-small" value="" /></td>
                                            <td><input type="text" name="extract[0]" class="input-mini" value="" /></td>
                                            <td><input type="text" name="output[0]" class="" value=""/></td>
                                            <td><input type="text" name="script[0]" class="input-small" value="" /></td>
                                            <td><input type="text" name="title[0]" class="input-small" value="" /></td>
                                            <td><a href="#" class="remove">@(LanguageResources.Administration_ContentProviders_Remove)</a></td>
                                        </tr>
                                        @for (var i = 1; i <= applicationSettings.ContentProviders.Count; i++)
                                        {
                                            // 1-based so we are building after the template which uses [0].
                                            var provider = applicationSettings.ContentProviders[i-1];
                                            <tr style="vertical-align: top">
                                                <td><input type="checkbox" name="enabled[@i]" checked="@provider.Enabled"/></td>
                                                <td><input type="checkbox" name="collapsible[@i]" checked="@provider.Collapsible" /></td>
                                                <td><input type="text" name="name[@i]" class="input-mini" value="@Encoder.HtmlEncode(provider.Name)" /></td>
                                                <td><input type="text" name="domains[@i]" class="input-small" value="@Encoder.HtmlEncode(provider.Domains)" /></td>
                                                <td><input type="text" name="extract[@i]" class="input-mini" value="@Encoder.HtmlEncode(provider.Extract)" /></td>
                                                <td><input type="text" name="output[@i]" class="" value="@Encoder.HtmlEncode(provider.Output)"/></td>
                                                <td><input type="text" name="script[@i]" class="input-small" value="@Encoder.HtmlEncode(provider.Script)" /></td>
                                                <td><input type="text" name="title[@i]" class="input-small" value="@Encoder.HtmlEncode(provider.Title)" /></td>
                                                <td><a href="#" class="remove">@(LanguageResources.Administration_ContentProviders_Remove)</a></td>
                                            </tr>
                                        }
                                        @{
                                            // we will create a blank row with which the user can add a new content provider.
                                            // If they use it, script will add another one.
                                            
                                            var nextIndex = applicationSettings.ContentProviders.Count + 1;
                                        }
                                        <tr>
                                            <td><input type="checkbox" name="enabled[@nextIndex]" /></td>
                                            <td><input type="checkbox" name="collapsible[@nextIndex]" /></td>
                                            <td><input type="text" name="name[@nextIndex]" class="input-mini" value="" /></td>
                                            <td><input type="text" name="domains[@nextIndex]" class="input-small" value="" /></td>
                                            <td><input type="text" name="extract[@nextIndex]" class="input-mini" value="" /></td>
                                            <td><input type="text" name="output[@nextIndex]" class="" value=""/></td>
                                            <td><input type="text" name="script[@nextIndex]" class="input-small" value="" /></td>
                                            <td><input type="text" name="title[@nextIndex]" class="input-small" value="" /></td>
                                            <td><a href="#" class="remove">@(LanguageResources.Administration_ContentProviders_Remove)</a></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </fieldset>
                    </div>
                </div>
                <div class="control-group">
                    <div class="controls">
                        <input type="submit" class="btn pull-right" value="@LanguageResources.SettingsSave" />
                    </div>
                </div>
                @Html.AntiForgeryToken()
            </form>
        </div>
    </section>
    <script src="@Url.Content("~/Scripts/jquery-2.0.3.min.js")"></script>
    <script src="@Url.Content("~/Scripts/bootstrap.min.js")"></script>
    <script type="text/javascript">
        (function ($) {
            // set the selected tab based on the hash
            var currentSection = document.location.hash || "#encryption";
            $('a[href="' + currentSection + '"]').tab('show');

            // always set the hash when we change tabs
            $('a[data-toggle="tab"]').on('shown', function (e) {
                document.location.hash = e.target.hash;
            });

            // make sure errors look pretty and bootstrap-y
            $('input.error').closest('.control-group').addClass('error');

            $('input[type="checkbox"]').click(function () {
                var $this = $(this),
                    name = $this.data('name'),
                    checked = $this.is(':checked') === true,
                    $hiddenField = $('input[type="hidden"][name="' + name + '"]');

                $hiddenField.attr('value', checked);
            });

            $('input[data-name="allowUserResetPassword"]').change(function () {
                var checked = $(this).is(':checked') === true;
                if (checked) {
                    $('#requestResetPasswordValid').removeAttr('disabled');
                }
                else {
                    $('#requestResetPasswordValid').attr('disabled', 'disabled');
                }
            });

            var $contentProviders = $('.contentproviders'),
                contentProviderCount = $contentProviders.find("table tbody tr").length;

            // remove a content provider
            $contentProviders.on('click', '.remove', function () {
                $(this).closest('tr').remove();
                // in case they deleted all of them or they deleted the new row
                ensureEmptyProvider();
                return false;
            });

            // add a new provider row if they use up the new row
            $contentProviders.on('change', 'input[name^=name]', function () {
                ensureEmptyProvider();
            });

            function ensureEmptyProvider() {
                var $lastProvider = $contentProviders.find("table tbody tr").last();
                if ($lastProvider.find("input[name^=name]").val()) {
                    addProvider();
                }
            }

            function addProvider() {
                var index = contentProviderCount++;
                var $cp = $contentProviders.find('.template')
                    .clone()
                    .removeClass('template')
                    .show();
                $cp.find("input").each(function () {
                    var $this = $(this),
                        name = $this.attr("name");
                    $this.attr("name", name.replace("[0]", "[" + index + "]"));
                });
                $contentProviders.find("table tbody").append($cp);
            }
        }(jQuery));
    </script>
</body>
</html>
